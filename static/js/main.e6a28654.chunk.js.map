{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","props","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","setCategory","categories","type","value","onChange","target","hidden","className","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","gif","id","title","content","images","downsized_medium","GridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","setCategories","ReactDOM","render","document","getElementById"],"mappings":"yMAoCeA,EAjCK,SAAAC,GAAU,IAAD,EACWC,mBAAS,IADpB,mBAClBC,EADkB,KACNC,EADM,KAezB,OACI,uBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,EAAMS,aAAY,SAAAC,GAAU,OAAKR,GAAL,mBAAoBQ,OAChDP,EAAc,MAKlB,UACI,uBACIQ,KAAK,OACLC,MAAOV,EACPW,SAlBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,UAmBnB,wBAAQD,KAAK,SAAb,uCACA,uBACA,wBAAQI,OAASb,EAAWM,OAAS,EAAIQ,UAAU,cAAnD,qE,+BC3BCC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,QAASH,EAAII,OAAOC,iBAAiBb,QAT1B,kBAaZM,GAbY,4CAAH,sDCcLQ,EAXE,SAAC,GAA0B,IAAzBL,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QAC1B,OACI,qBAAIF,GAAIA,EAAIb,UAAU,2CAAtB,UACI,qBAAKmB,IAAKJ,EAASD,MAAOA,EAAOM,IAAKN,EAAOd,UAAU,oBACvD,6BAAKc,QCuBFO,EA1BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDJ,SAAAA,GAAa,IAAD,EACVjB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAHuB,mBAC7BC,EAD6B,KACtBC,EADsB,KAcpC,OARAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAhB,GAAI,OAAIc,EAAS,CACnBf,KAAMC,EACNY,SAAS,SAElB,CAACpB,IAEGqB,EDXqBI,CAAazB,GAA7BQ,EAFgB,EAErBD,KAAUa,EAFW,EAEXA,QAEjB,OACI,gCACI,oBAAItB,UAAU,qCAAd,SAAoDE,IACnDoB,GAAW,2CACZ,oBAAItB,UAAW,aAAf,SAEQU,EAAKC,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEatBe,EAxBM,SAAA5C,GAAU,IAAD,EACUC,mBAAS,CAAC,cADpB,mBACnBS,EADmB,KACPmC,EADO,KAG1B,OACI,qCACI,oBAAI7B,UAAU,sBAAd,0BACA,cAAC,EAAD,CAAaP,YAAaoC,IAC1B,uBACA,6BAEQnC,EAAWiB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,YCTjC4B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e6a28654.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = props => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            props.setCategory(categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n            <button type=\"submit\">Agregar al listado&emsp;+</button>\r\n            <br/>\r\n            <strong hidden={(inputValue.length > 2)} className=\"text-danger\">Ingresar al menos dos letras para cargar al listado</strong>\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategory:PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=BmYgkBkZil8dQecahIKV91KzNer53BEM`;\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n\r\n    const gifs = data.map(gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            content: gif.images.downsized_medium.url,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GridItem = ({id, title, content}) => {\r\n    return (\r\n        <li id={id} className='card animate__fadeIn animate__backInDown'>\r\n            <img src={content} title={title} alt={title} className='animate__fadeIn'/>\r\n            <h3>{title}</h3>\r\n        </li>\r\n    );\r\n};\r\n\r\nGridItem.propTypes = {};\r\n\r\nexport default GridItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\nimport GridItem from \"./GifGridItem\";\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data:gifs,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <div>\r\n            <h3 className='animate__flash animate__bounceInUp'>{category}</h3>\r\n            {loading && <p>Loading...</p>}\r\n            <ol className={'cards-grid'}>\r\n                {\r\n                    gifs.map(gif =>\r\n                        <GridItem\r\n                            key={gif.id}\r\n                            {...gif}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n};\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifGrid;\r\n","import {useEffect, useState} from \"react\";\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = category => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(gifs => setState({\r\n                data: gifs,\r\n                loading: false,\r\n            }));\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = props => {\r\n    const [categories, setCategories] = useState(['Funny cat']);\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"animate__bounceInUp\">GifExpertApp</h2>\r\n            <AddCategory setCategory={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nGifExpertApp.propTypes = {};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from \"./GifExpertApp\";\n\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n    document.getElementById('root')\n);"],"sourceRoot":""}